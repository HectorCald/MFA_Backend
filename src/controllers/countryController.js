const CountryModel = require('../models/countryModel');

class CountryController {
    /**
     * Obtener todos los pa√≠ses
     * GET /api/countries
     */
    static async getAllCountries(req, res) {
        try {
            console.log('üåç Obteniendo todos los pa√≠ses...');
            
            const countries = await CountryModel.getAllCountries();
            
            console.log(`‚úÖ Se encontraron ${countries.length} pa√≠ses`);
            
            res.status(200).json({
                success: true,
                message: 'Pa√≠ses obtenidos exitosamente',
                data: countries,
                count: countries.length
            });
        } catch (error) {
            console.error('‚ùå Error en CountryController.getAllCountries:', error);
            res.status(500).json({
                success: false,
                message: 'Error interno del servidor al obtener los pa√≠ses',
                error: error.message
            });
        }
    }

    /**
     * Obtener un pa√≠s por ID
     * GET /api/countries/:id
     */
    static async getCountryById(req, res) {
        try {
            const { id } = req.params;
            
            // Validar que el ID sea un n√∫mero
            if (isNaN(id)) {
                return res.status(400).json({
                    success: false,
                    message: 'El ID del pa√≠s debe ser un n√∫mero v√°lido'
                });
            }

            console.log(`üåç Obteniendo pa√≠s con ID: ${id}`);
            
            const country = await CountryModel.getCountryById(id);
            
            if (!country) {
                return res.status(404).json({
                    success: false,
                    message: 'Pa√≠s no encontrado'
                });
            }

            console.log(`‚úÖ Pa√≠s encontrado: ${country.name}`);
            
            res.status(200).json({
                success: true,
                message: 'Pa√≠s obtenido exitosamente',
                data: country
            });
        } catch (error) {
            console.error('‚ùå Error en CountryController.getCountryById:', error);
            res.status(500).json({
                success: false,
                message: 'Error interno del servidor al obtener el pa√≠s',
                error: error.message
            });
        }
    }

    /**
     * Buscar un pa√≠s por nombre
     * GET /api/countries/search?name=nombre
     */
    static async getCountryByName(req, res) {
        try {
            const { name } = req.query;
            
            if (!name || name.trim() === '') {
                return res.status(400).json({
                    success: false,
                    message: 'El par√°metro "name" es requerido'
                });
            }

            console.log(`üîç Buscando pa√≠s con nombre: ${name}`);
            
            const country = await CountryModel.getCountryByName(name.trim());
            
            if (!country) {
                return res.status(404).json({
                    success: false,
                    message: 'Pa√≠s no encontrado'
                });
            }

            console.log(`‚úÖ Pa√≠s encontrado: ${country.name}`);
            
            res.status(200).json({
                success: true,
                message: 'Pa√≠s encontrado exitosamente',
                data: country
            });
        } catch (error) {
            console.error('‚ùå Error en CountryController.getCountryByName:', error);
            res.status(500).json({
                success: false,
                message: 'Error interno del servidor al buscar el pa√≠s',
                error: error.message
            });
        }
    }

    /**
     * Buscar un pa√≠s por c√≥digo
     * GET /api/countries/code/:code
     */
    static async getCountryByCode(req, res) {
        try {
            const { code } = req.params;
            
            if (!code || code.trim() === '') {
                return res.status(400).json({
                    success: false,
                    message: 'El c√≥digo del pa√≠s es requerido'
                });
            }

            console.log(`üîç Buscando pa√≠s con c√≥digo: ${code}`);
            
            const country = await CountryModel.getCountryByCode(code.trim());
            
            if (!country) {
                return res.status(404).json({
                    success: false,
                    message: 'Pa√≠s no encontrado'
                });
            }

            console.log(`‚úÖ Pa√≠s encontrado: ${country.name} (${country.code})`);
            
            res.status(200).json({
                success: true,
                message: 'Pa√≠s encontrado exitosamente',
                data: country
            });
        } catch (error) {
            console.error('‚ùå Error en CountryController.getCountryByCode:', error);
            res.status(500).json({
                success: false,
                message: 'Error interno del servidor al buscar el pa√≠s',
                error: error.message
            });
        }
    }
}

module.exports = CountryController; 